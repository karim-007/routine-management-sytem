package userfrom;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;


/**
 *
 * @author Abdul Karim
 */
public class Registration extends javax.swing.JFrame {
    Connection conn = null;

    public Registration(Connection conn) {
        this.conn=conn;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wrongPanel = new javax.swing.JPanel();
        wrongMessage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        nametxt = new javax.swing.JTextField();
        usernametxt = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passwordtxt = new javax.swing.JPasswordField();
        btnlogin = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registration From");
        setBackground(new java.awt.Color(153, 153, 153));
        setBounds(new java.awt.Rectangle(400, 70, 0, 0));

        wrongMessage.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        wrongMessage.setForeground(new java.awt.Color(0, 0, 204));
        wrongMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout wrongPanelLayout = new javax.swing.GroupLayout(wrongPanel);
        wrongPanel.setLayout(wrongPanelLayout);
        wrongPanelLayout.setHorizontalGroup(
            wrongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrongMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );
        wrongPanelLayout.setVerticalGroup(
            wrongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrongMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Registration"), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255))));
        jPanel1.setLayout(null);
        jPanel1.add(nametxt);
        nametxt.setBounds(150, 70, 120, 30);
        jPanel1.add(usernametxt);
        usernametxt.setBounds(150, 130, 120, 30);

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });
        Submit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SubmitKeyPressed(evt);
            }
        });
        jPanel1.add(Submit);
        Submit.setBounds(180, 280, 90, 30);

        jLabel1.setText("Name");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 70, 60, 20);

        jLabel2.setText("UserName");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 130, 90, 20);

        jLabel3.setText("Password");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(40, 190, 60, 20);
        jPanel1.add(passwordtxt);
        passwordtxt.setBounds(150, 190, 120, 30);

        btnlogin.setText("Login");
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });
        btnlogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnloginKeyPressed(evt);
            }
        });
        jPanel1.add(btnlogin);
        btnlogin.setBounds(320, 20, 60, 25);

        jButton1.setText("Email");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(280, 230, 58, 25);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wrongPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(wrongPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        int lock=0;
        if(nametxt.getText().isEmpty()){
            lock=1;
            wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
            wrongMessage.setText("Name cant be Empty");
        }else if(usernametxt.getText().isEmpty()){
            lock=1;
            wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
            wrongMessage.setText("User name field cant be Empty");
        }else if(passwordtxt.getText().isEmpty()){
            lock=1;
            wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
            wrongMessage.setText("Password Field cant be Empty");
            passwordtxt.setText(q);
        }else{
            try {
                ps=conn.prepareStatement("select * from UserInfo");
                rs=ps.executeQuery();
              while(rs.next()){
                  if(rs.getString("usename").equals(usernametxt.getText()))
                  {
                      lock=1;
                      wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                      wrongMessage.setText("User Name Alrady use");
                      passwordtxt.setText(q);
                  }
              }
          } catch (SQLException ex) {
              Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
          }finally{
            try {
                rs.close();
                ps.close();
            } catch (SQLException ex) {
                wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                wrongMessage.setText("Data closing Problem try Again");
            }
        }
        }
        
        if(lock==0){
            try{
                String sql="Insert into UserInfo (name,usename,password) values (?,?,?)";

                ps=conn.prepareStatement(sql);

                ps.setString(1, nametxt.getText());
                ps.setString(2, usernametxt.getText());
                ps.setString(3, passwordtxt.getText());

                ps.execute();
                wrongPanel.setBackground(new java.awt.Color(0,102,51));
                wrongMessage.setText("Data succesfully Insert");
                signupreset();


            }catch(Exception e){
                    wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                    wrongMessage.setText("Data cant Insert");
                    
            }finally{
                try {
                    rs.close();
                    ps.close();
                } catch (SQLException ex) {
                    wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                    wrongMessage.setText("Data closing Problem try Again");
                }
            }
       }   
    }//GEN-LAST:event_SubmitActionPerformed

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnloginActionPerformed

    private void btnloginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnloginKeyPressed
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnloginKeyPressed

    private void SubmitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SubmitKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            int lock=0;
            if(nametxt.getText().isEmpty()){
                lock=1;
                wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                wrongMessage.setText("Name cant be Empty");
            }else if(usernametxt.getText().isEmpty()){
                lock=1;
                wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                wrongMessage.setText("User name field cant be Empty");
            }else if(passwordtxt.getText().isEmpty()){
                lock=1;
                wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                wrongMessage.setText("Password Field cant be Empty");
                passwordtxt.setText(q);
            }else{
                try {
                    ps=conn.prepareStatement("select * from UserInfo");
                    rs=ps.executeQuery();
                  while(rs.next()){
                      if(rs.getString("usename").equals(usernametxt.getText()))
                      {
                          lock=1;
                          wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                          wrongMessage.setText("User Name Alrady use");
                          passwordtxt.setText(q);
                      }
                  }
              } catch (SQLException ex) {
                  Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
              }finally{
                try {
                    rs.close();
                    ps.close();
                } catch (SQLException ex) {
                    wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                    wrongMessage.setText("Data closing Problem try Again");
                }
            }
            }

            if(lock==0){
                try{
                    String sql="Insert into UserInfo (name,usename,password) values (?,?,?)";

                    ps=conn.prepareStatement(sql);

                    ps.setString(1, nametxt.getText());
                    ps.setString(2, usernametxt.getText());
                    ps.setString(3, passwordtxt.getText());

                    ps.execute();
                    wrongPanel.setBackground(new java.awt.Color(0,102,51));
                    wrongMessage.setText("Data succesfully Insert");
                    signupreset();


                }catch(Exception e){
                        wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                        wrongMessage.setText("Data cant Insert");

                }finally{
                    try {
                        rs.close();
                        ps.close();
                    } catch (SQLException ex) {
                        wrongPanel.setBackground(new java.awt.Color(255, 0, 0));
                        wrongMessage.setText("Data closing Problem try Again");
                    }
                }
           }
        }
    }//GEN-LAST:event_SubmitKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    mail();
    }//GEN-LAST:event_jButton1ActionPerformed
    String username="karim.uap007@gamil.com";
    String password="1744Nazmul";
    private void mail(){
        Properties props=new Properties();
        props.put("mail.smpt.host", "smpt.gmail.com");
        props.put("mail.smpt.socketFactory.port", "587");
        props.put("mail.smpt.socketFactory.class", "java.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smpt.port.port","587");
        
        Session session = Session.getInstance(props,
          new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
          });
        try{
              Message message=new MimeMessage(session);
              message.setFrom(new InternetAddress("karim.uap007@gmail.com"));
              message.setRecipients(Message.RecipientType.TO, InternetAddress.parse("karimraj90@gmail.com"));
              message.setSubject("hi ha ha");
              message.setText("i am message");
              Transport.send(message);
              JOptionPane.showMessageDialog(null,"sent");
        }catch(Exception e){
                  System.out.println(e);  
                }
    }
    void signupreset(){
        nametxt.setText(q);
        usernametxt.setText(q);
        passwordtxt.setText(q);
    }
    PreparedStatement ps=null;
    ResultSet rs=null;
    String name=new String();
    String confirm =new String();
    String q=new String();//Emty String
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
          //new Registration().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Submit;
    private javax.swing.JButton btnlogin;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nametxt;
    private javax.swing.JPasswordField passwordtxt;
    private javax.swing.JTextField usernametxt;
    private javax.swing.JLabel wrongMessage;
    private javax.swing.JPanel wrongPanel;
    // End of variables declaration//GEN-END:variables
}
